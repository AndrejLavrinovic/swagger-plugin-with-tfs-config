swagger: "2.0"
info:
  contact:
    email: sarma@ussmoso.com
  description: "test-BLA-BLA-BLA"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: My-Petstore NOSECURITY OpenAPI2.0
  version: "1.0.0"
host: playground.asux.org
basePath: /playground
schemes:
- https
paths:
  /pet:
    post:
      parameters: []
      responses:
        "200":
          description: successful operation
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Internal Error while processing API request
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      operationId: addPet
      summary: Add a new pet to the store
    put:
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - description: Pet object that needs to be added to the store
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Pet'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "202":
          description: Request received and submitted
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      operationId: updatePet
      summary: Update an existing pet
  /pet/findByStatus:
    get:
      produces:
      - application/json
      parameters:
      - collectionFormat: multi
        description: Status values that need to be considered for filter
        in: query
        items:
          default: available
          enum:
          - available
          - pending
          - sold
          type: string
        name: status
        required: true
        type: array
      responses:
        "200":
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Pet'
            type: array
        "400":
          description: Invalid status value
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      summary: Finds Pets by status
  /pet/findByTags:
    get:
      produces:
      - application/json
      parameters:
      - collectionFormat: multi
        description: Tags to filter by
        in: query
        items:
          type: string
        name: tags
        required: true
        type: array
      responses:
        "200":
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/Pet'
            type: array
        "400":
          description: Invalid tag value
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      deprecated: true
      description: Multiple tags can be provided with comma separated strings. Use
        tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      summary: Finds Pets by tags
  /pet/{petId}:
    delete:
      parameters:
      - in: header
        name: myown_delete_api_key
        required: false
        type: string
      - description: Pet id to delete
        format: int64
        in: path
        name: petId
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
        "202":
          description: Request received and submitted
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      operationId: deletePet
      summary: Deletes a pet
    get:
      produces:
      - application/json
      parameters:
      - description: ID of pet to return
        format: int64
        in: path
        name: petId
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      description: Returns a single pet
      operationId: getPetById
      summary: Find pet by ID
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: ID of pet that needs to be updated
        format: int64
        in: path
        name: petId
        required: true
        type: integer
      - description: Updated name & status of the pet after changing type to scheme
        in: body
        name: petname
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: successful operation
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Invalid Input
        "500":
          description: Internal Error while processing API request
      tags:
      - pet
      operationId: updatePetWithForm
      summary: Updates a pet in the store with form data
  /store/inventory:
    get:
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: object
        "400":
          description: Invalid ID supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Pet not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - store
      description: Returns a map of status codes to quantities
      operationId: getInventory
      summary: Returns pet inventories by status
  /store/order:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - description: order placed for purchasing the pet
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Order'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid Order
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - store
      operationId: placeOrder
      summary: Place an order for a pet
  /store/order/{orderId}:
    delete:
      parameters:
      - description: ID of the order that needs to be deleted
        format: int64
        in: path
        minimum: 1
        name: orderId
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
        "202":
          description: Request received and submitted
        "400":
          description: Invalid input
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - store
      description: For valid response try integer IDs with positive integer value.
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      summary: Delete purchase order by ID
    get:
      produces:
      - application/json
      parameters:
      - description: ID of pet that needs to be fetched
        format: int64
        in: path
        maximum: 10
        minimum: 1
        name: orderId
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid input
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: Not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - store
      description: For valid response try integer IDs with value >= 1 and <= 10. Other
        values will generated exceptions
      operationId: getOrderById
      summary: Find purchase order by ID
  /user:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - description: Created user object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid inputs supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      description: This can only be done by the logged in user.
      operationId: createUser
      summary: Create user
  /user/createWithArray:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - description: List of user object
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/User'
          type: array
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid inputs supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      operationId: createUsersWithArrayInput
      summary: Creates list of users with given input array
  /user/createWithList:
    post:
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "201":
          description: Created / Added successfully
        "202":
          description: Request received and submitted
        "400":
          description: Invalid inputs supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      operationId: createUsersWithListInput
      summary: Creates list of users with given input array
  /user/login:
    get:
      parameters:
      - description: The user name for login
        in: query
        name: username
        required: true
        type: string
      - description: The password for login in clear text
        in: query
        name: password
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              format: date-time
              type: string
            X-Rate-Limit:
              description: calls per hour allowed by the user
              format: int32
              type: integer
        "400":
          description: Invalid username/password supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: User not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      operationId: loginUser
      summary: Logs user into the system
  /user/logout:
    get:
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "400":
          description: Invalid inputs supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: User not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      operationId: logoutUser
      summary: Logs out current logged in user session
  /user/{username}:
    delete:
      produces:
      - application/json
      parameters:
      - description: The name that needs to be deleted
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AnyJSON'
        "202":
          description: Request received and submitted
        "400":
          description: Invalid inputs supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: User not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      summary: Delete user
    get:
      produces:
      - application/json
      parameters:
      - description: 'The name that needs to be fetched. Use user1 for testing. '
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Invalid username supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: User not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      operationId: getUserByName
      summary: Get user by user name
    put:
      consumes:
      - application/json
      parameters:
      - description: name that need to be updated
        in: path
        name: username
        required: true
        type: string
      - description: Updated user object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: successful operation
        "202":
          description: Request received and submitted
        "400":
          description: Invalid user supplied
        "401":
          description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
            is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        "402":
          description: Payment is required for this API request
        "403":
          description: Sarma's OAS3.0 standard Insufficient Authorization or improper
            role assignments
          headers:
            WWW_Authenticate:
              type: string
        "404":
          description: User not found
        "405":
          description: Validation exception
        "500":
          description: Internal Error while processing API request
      tags:
      - user
      description: This can only be done by the logged in user.
      operationId: updateUser
      summary: Updated user
definitions:
  AnyJSON:
    type: object
  ApiResponse:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
      type:
        type: string
    type: object
  Category:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
    type: object
  Order:
    properties:
      complete:
        default: false
        type: boolean
      id:
        format: int64
        type: integer
      petId:
        format: int64
        type: integer
      quantity:
        format: int32
        type: integer
      shipDate:
        format: date-time
        type: string
      status:
        description: Order Status
        enum:
        - placed
        - approved
        - delivered
        type: string
    type: object
  Pet:
    properties:
      tags:
        items:
          $ref: '#/definitions/Tag'
        type: array
      category:
        $ref: '#/definitions/Category'
      id:
        format: int64
        type: integer
      name:
        type: string
      photoUrls:
        items:
          type: string
        type: array
      status:
        description: pet status in the store
        enum:
        - available
        - pending
        - sold
        type: string
    required:
    - name
    - photoUrls
    type: object
  Tag:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
    type: object
  User:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        format: int64
        type: integer
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        description: User Status
        format: int32
        type: integer
      username:
        type: string
    type: object
tags:
- externalDocs:
    description: Find out more
    url: http://swagger.io
  description: Everything about your Pets
  name: pet
- description: Access to Petstore orders
  name: store
- externalDocs:
    description: Find out more about our store
    url: http://swagger.io
  description: Operations about user
  name: user
externalDocs:
  description: This API is based on the SwaggerHub's Petstore.  Find out more about
    Swagger's PetStore API sample
  url: http://swagger.io
x-components:
  responses:
    AuthenticationFailure:
      description: Sarma's OAS3.0 standard 'AuthenticationFailure' that, API Authenticator/key
        is missing or invalid
      headers:
        WWW_Authenticate:
          type: string
    AuthorizationInsufficient:
      description: Sarma's OAS3.0 standard Insufficient Authorization or improper
        role assignments
      headers:
        WWW_Authenticate:
          type: string
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      in: body
      name: body
      required: true
      schema:
        $ref: '#/definitions/Pet'
    UserArray:
      description: List of user object
      in: body
      name: body
      required: true
      schema:
        items:
          $ref: '#/definitions/User'
        type: array